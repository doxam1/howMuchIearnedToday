(()=>{"use strict";var e={919:(e,t,n)=>{n.d(t,{A:()=>a});var o=n(354),r=n.n(o),u=n(314),s=n.n(u)()(r());s.push([e.id,"body{background-color:#1e90ff;display:flex;justify-content:center;align-items:center;flex-direction:column;gap:2rem;font-size:20px;position:relative}.shiftDataForm fieldset{display:flex;flex-direction:column;gap:1rem}.inputDiv{display:flex;justify-content:space-between;gap:1rem}.inputDiv .vehicleType,.inputDiv .checkboxDiv{width:100%;text-align:center}.inputDiv.submitBtnDiv{width:100%;display:flex;justify-content:center}.inputDiv.submitBtnDiv button{width:70px;height:40px;border-radius:.5rem}.counter{position:absolute;top:90svh}.counter a{font-size:3px}","",{version:3,sources:["webpack://./src/styles/style.css"],names:[],mappings:"AAAA,KAAK,wBAAwB,CAAC,YAAY,CAAC,sBAAsB,CAAC,kBAAkB,CAAC,qBAAqB,CAAC,QAAQ,CAAC,cAAc,CAAC,iBAAiB,CAAC,wBAAwB,YAAY,CAAC,qBAAqB,CAAC,QAAQ,CAAC,UAAU,YAAY,CAAC,6BAA6B,CAAC,QAAQ,CAAC,8CAA8C,UAAU,CAAC,iBAAiB,CAAC,uBAAuB,UAAU,CAAC,YAAY,CAAC,sBAAsB,CAAC,8BAA8B,UAAU,CAAC,WAAW,CAAC,mBAAmB,CAAC,SAAS,iBAAiB,CAAC,SAAS,CAAC,WAAW,aAAa",sourcesContent:["body{background-color:#1e90ff;display:flex;justify-content:center;align-items:center;flex-direction:column;gap:2rem;font-size:20px;position:relative}.shiftDataForm fieldset{display:flex;flex-direction:column;gap:1rem}.inputDiv{display:flex;justify-content:space-between;gap:1rem}.inputDiv .vehicleType,.inputDiv .checkboxDiv{width:100%;text-align:center}.inputDiv.submitBtnDiv{width:100%;display:flex;justify-content:center}.inputDiv.submitBtnDiv button{width:70px;height:40px;border-radius:.5rem}.counter{position:absolute;top:90svh}.counter a{font-size:3px}"],sourceRoot:""}]);const a=s},314:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,u){"string"==typeof e&&(e=[[null,e,void 0]]);var s={};if(o)for(var a=0;a<this.length;a++){var i=this[a][0];null!=i&&(s[i]=!0)}for(var c=0;c<e.length;c++){var l=[].concat(e[c]);o&&s[l[0]]||(void 0!==u&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=u),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),t.push(l))}},t}},354:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),u="/*# ".concat(r," */");return[t].concat([u]).join("\n")}return[t].join("\n")}},72:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var u={},s=[],a=0;a<e.length;a++){var i=e[a],c=o.base?i[0]+o.base:i[0],l=u[c]||0,d="".concat(c," ").concat(l);u[c]=l+1;var p=n(d),m={css:i[1],media:i[2],sourceMap:i[3],supports:i[4],layer:i[5]};if(-1!==p)t[p].references++,t[p].updater(m);else{var A=r(m,o);o.byIndex=a,t.splice(a,0,{identifier:d,updater:A,references:1})}s.push(d)}return s}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var u=o(e=e||[],r=r||{});return function(e){e=e||[];for(var s=0;s<u.length;s++){var a=n(u[s]);t[a].references--}for(var i=o(e,r),c=0;c<u.length;c++){var l=n(u[c]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}u=i}}},659:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},540:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},56:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var u=n.sourceMap;u&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(u))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},113:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var u=t[o]={id:o,exports:{}};return e[o](u,u.exports,n),u.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{var e=n(72),t=n.n(e),o=n(825),r=n.n(o),u=n(659),s=n.n(u),a=n(56),i=n.n(a),c=n(540),l=n.n(c),d=n(113),p=n.n(d),m=n(919),A={};A.styleTagTransform=p(),A.setAttributes=i(),A.insert=s().bind(null,"head"),A.domAPI=r(),A.insertStyleElement=l(),t()(m.A,A),m.A&&m.A.locals&&m.A.locals;const v=document.querySelector(".submitBtn"),f=document.querySelector("#shabat"),y=document.querySelector("#saturdayNight"),h=document.querySelector("fieldset");f.onchange=()=>{const e=document.createElement("div"),t=document.createElement("div");1==f.checked?(e.innerHTML='\n  <label for="shabesJobsAmount">  כמה משלוחים נעשו בשבת? </label>\n  <input type="tel" id="shabesJobsAmount" name="shabesJobsAmount" placeholder=\'מ16:00 ועד מוצאי שבת\'/>\n  ',e.classList.add("inputDiv","shabesJobs"),t.innerHTML='\n  <label for="shabesHours"> כמה שעות עבדת בשבת? </label>\n  <input type="tel" id="shabesHours" name="shabesHours" placeholder=\'כניסת השבת ועד מוצאי שבת\'/>\n  ',t.classList.add("inputDiv","shabesHours"),h.insertBefore(t,document.querySelector(".inputDiv.submitBtnDiv")),h.insertBefore(e,document.querySelector(".inputDiv.submitBtnDiv"))):0==f.checked&&(h.removeChild(document.querySelector(".shabesHours")),h.removeChild(document.querySelector(".shabesJobs")))},y.onchange=()=>{const e=document.createElement("div");1==y.checked?(e.classList.add("inputDiv","saturdayNightJobs"),e.innerHTML='\n    <label for="saturdayNightJobsAmount">  כמה משלוחים נעשו<b> בצאת</b> שבת? </label>\n    <input type="tel" id="saturdayNightJobsAmount" name="saturdayNightJobsAmount" placeholder=\'צאת שבת(20:00 בקיץ) עד הסוף\'/>\n    ',h.insertBefore(e,document.querySelector(".inputDiv.submitBtnDiv"))):0==y.checked&&h.removeChild(document.querySelector(".saturdayNightJobs"))},v.onclick=()=>{const e=document.querySelector("#jobsAmount"),t=document.querySelector("#hours");let n=document.querySelector("#km");const o=document.querySelector(".outputDiv");let r="";const u=document.querySelector('[name="vehicle"]:checked');if(null==u)return o.style.color="red",o.textContent="אנא בחר כלי רכב",void setTimeout((()=>{o.textContent=""}),1500);if(""==e.value||1==Number.isNaN(parseInt(e.value)))return o.style.color="red",o.textContent=" כמה משלוחים עשית? ",void setTimeout((()=>{o.textContent=""}),1500);if(""==t.value||1==Number.isNaN(parseInt(t.value)))return o.style.color="red",o.textContent="כמה שעות עבדת?",void setTimeout((()=>{o.textContent=""}),1500);if(""==n.value||1==Number.isNaN(parseInt(n.value)))return o.style.color="red",o.textContent='כמה ק"מ נסעת?',void setTimeout((()=>{o.textContent=""}),1500);if("bicycle"==u.value?n=.5*n.value:"motorbike"==u.value&&(n=1.5*n.value),e.value/t.value>=2){let t=0,u=0;if(1==f.checked){let n=document.querySelector("#shabesJobsAmount").value;if(""==n||1==Number.isNaN(parseInt(n))||parseInt(n)>parseInt(e.value))return o.style.color="red",o.textContent="כמה משלוחים נעשו בשבת?",void setTimeout((()=>{o.style="",o.textContent=""}),1500);if(1==y.checked&&1==f.checked&&parseInt(n)+parseInt(document.querySelector("#saturdayNightJobsAmount").value>parseInt(e.value)))return o.style.color="red",o.textContent="כמות המשלוחים בשבת ומוצאי שבת גדולה מכמות המשלוחים הכללית, אנא בדוק שנית",void setTimeout((()=>{o.style="",o.textContent=""}),2500);t=20*n}if(1==y.checked){let t=document.querySelector("#saturdayNightJobsAmount").value;if(""==t||1==Number.isNaN(parseInt(t))||parseInt(t)>parseInt(e.value))return o.style.color="red",o.textContent="כמה משלוחים נעשו במוצאי שבת?",void setTimeout((()=>{o.style="",o.textContent=""}),2500);if(1==y.checked&&1==f.checked&&parseInt(t)+parseInt(document.querySelector("#shabesJobsAmount").value)>parseInt(e.value))return o.style.color="red",o.textContent="כמות המשלוחים בשבת ומוצאי שבת גדולה מכמות המשלוחים הכללית, אנא בדוק שנית",void setTimeout((()=>{o.style="",o.textContent=""}),1500);u=10*t}r=+(20*e.value+n+t+u)}else if(e.value/t.value<2){let u=0;if(1==y.checked&&1==f.checked&&parseInt(document.querySelector("#saturdayNightJobsAmount").value)+parseInt(document.querySelector("#shabesJobsAmount").value)>parseInt(e.value))return o.style.color="red",o.textContent="כמות המשלוחים בשבת ומוצאי שבת גדולה מכמות המשלוחים הכללית, אנא בדוק שנית",void setTimeout((()=>{o.style="",o.textContent=""}),1500);if(1==f.checked){let e=document.querySelector("#shabesHours").value;if(""==e||1==Number.isNaN(parseInt(e))||parseInt(e)>parseInt(t.value))return o.style.color="red",o.textContent="כמה שעות עבדת בשבת? - כניסת שבת ועד צאת שבת בלבד",void setTimeout((()=>{o.style="",o.textContent=""}),1500);u=16*e}r=+(32.3*t.value+n+u),1==f.checked&&0==y.checked?(r<20*document.querySelector("#shabesJobsAmount").value)+20*e.value&&(r=40*document.querySelector("#shabesJobsAmount").value+20*(e.value-document.querySelector("#shabesJobsAmount").value)):0==f.checked&&1==y.checked?r<10*document.querySelector("#saturdayNightJobsAmount").value+20*e.value&&(r=30*document.querySelector("#saturdayNightJobsAmount").value+20*(e.value-document.querySelector("#saturdayNightJobsAmount").value)):1==f.checked&&1==y.checked&&r<20*document.querySelector("#shabesJobsAmount").value+10*document.querySelector("#saturdayNightJobsAmount").value+20*e.value&&(r=40*document.querySelector("#shabesJobsAmount").value+30*document.querySelector("#saturdayNightJobsAmount").value+20*(e.value-document.querySelector("#shabesJobsAmount").value-document.querySelector("#saturdayNightJobsAmount").value))}o.style.border="1px solid blue",o.style.color="black",o.style.padding="1rem",o.textContent=`שכר המשמרת לפי הנתונים הנ"ל הינו: ${r.toFixed(2)} ש"ח`}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,